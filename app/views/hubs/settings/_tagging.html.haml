.row
  .col-md-6
    = form_tag(set_settings_hub_path(hub)) do
      %h2
        %strong Tagging

      .form-group
        = label_tag 'tags_delimiter', 'Tag delimiters'
        %p
          TagTeam will split tags based on the delimiters listed below. The delimiter
          %span.badge ,
          cannot be removed (as a default).
        %ul.list-unstyled.nicely-padded.delimiter-list
          - settings[:tags_delimiter].each do |delimiter|
            %li
              %span.badge= delimiter.html_safe
              - if delimiter == '‚éµ'
                (space)
              - if delimiter != ','
                = link_to remove_delimiter_hub_path(delimiter: delimiter),
                  method: :delete,
                  title: 'Remove this delimiter',
                  class: 'pull-right',
                  confirm: 'Are you sure you want to remove this delimiter?' do
                  = fa_icon 'times'
        = text_field_tag('tags_delimiter',
          nil,
          id: 'tags_delimiter',
          class: 'form-control',
          maxlength: '1',
          placeholder: 'Add another delimiter')
      %br
      .form-group
        = label_tag 'official_tag_prefix', 'Optional tag prefix'
        = text_field_tag('official_tag_prefix', settings[:official_tag_prefix], id: 'official_tag_prefix', class: 'form-control')
        - if settings[:official_tag_prefix].present?
          Current value
          %span.badge= settings[:official_tag_prefix].gsub(' ', '&nbsp;').html_safe

      .form-group
        = label_tag 'hub_approved_tags', 'Approved tags (one per line)'
        = text_area_tag('hub_approved_tags', settings[:hub_approved_tags].map(&:tag).join("\n"), id: 'hub_approved_tags', class: 'noEditor', cols: 32, rows: 12)

      .form-group.checkbox
        = label_tag 'suggest_only_approved_tags' do
          = check_box_tag('suggest_only_approved_tags', settings[:suggest_only_approved_tags], settings[:suggest_only_approved_tags], id: 'suggest_only_approved_tags')
          Suggest only approved tags in the bookmarklet form

      .form-group.checkbox
        = label_tag 'bookmarklet_empty_description_reminder' do
          = check_box_tag('bookmarklet_empty_description_reminder',
            true,
            settings[:bookmarklet_empty_description_reminder],
            id: 'bookmarklet_empty_description_reminder')
          Warn users about submitting an empty description field in the bookmarklet form
        = label_tag 'enable_tag_scoreboard' do
          = check_box_tag('enable_tag_scoreboard',
            true,
            hub.enable_tag_scoreboard)
          Enable tag scoreboard
      .form-group
        = submit_tag 'Save', class: 'btn btn-primary', id: 'save_settings'
